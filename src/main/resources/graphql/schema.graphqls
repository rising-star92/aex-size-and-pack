type Query {
     getPackOptimizationValues(planid: Int!, channelid : Int!): PackOptimizationResponse!
     getFinelineBuyQtyDetails(buyQtyRequest: BuyQtyRequest): FetchFineLineResponse!
}

type PackOptimizationResponse{
    planId: Int!
    channel:Int!
    lvl3List: [Lvl3]
}

type Lvl3 {
    lvl3Nbr: Int
    constraints:Constraints
   	lvl4List: [Lvl4]
}

type Constraints{
 supplierConstraints:SupplierConstraints
 ccLevelConstraints:[CcLevelConstraints]
}

type SupplierConstraints{
   supplierName:String
   maxUnitsPerPack:Int
   maxPacks:Int
}

type CcLevelConstraints{
 factoryIds:String
 countryOfOrigin:String 
 portOfOrigin:String
 singlePackIndicator:Int	
 colorCombination:String 
}

type Lvl4 {
    lvl4Nbr: Int
    lvl4Name: String
    constraints:Constraints
    finelines: [Fineline]
}

type Fineline {
    finelineNbr: Int
    finelineName: String
    packOptimizationStatus: String
    constraints:Constraints
    styles:[Style]
}

type Style {
    styleNbr: String
    constraints:Constraints
    customerChoices:[CustomerChoice]
}

type CustomerChoice {
    ccId: String
    colorName: String
    constraints:Constraints
    
}

input BuyQtyRequest {
    planId: Int!
    planDesc: String!
    channel: String!
}

type FetchFineLineResponse {
    planId: Int
    planDesc: String
    lvl0Nbr: Int
    lvl0Desc: String
    lvl1Nbr: Int
    lvl1Desc: String
    lvl2Nbr: Int
    lvl2Desc: String
    lvl3List:[Lvl3Dto]
}

type Lvl3Dto {
    lvl3Nbr: Int
    lvl3Desc: String
    lvl4List:[Lvl4Dto]
}

type Lvl4Dto {
    lvl4Nbr: Int
    lvl4Desc: String
    finelines: [FinelineDto]
}

type FinelineDto {
    finelineNbr: Int
    finelineDesc: String
    metrics: MetricsDto
    clusters: [ClustersDto]
}
type ClustersDto {
    clusterID: Int
    sizeList: [SizeList]
}

type SizeList {
    sizeId: Int
    sizeDesc: String
    metrics: MetricsDto
}

type MetricsDto {
    sizeProfilePct:Int
    adjSizeProfilePct:Int
    avgSizeProfilePct:Int
    adjAvgSizeProfilePct:Int
    buyQty:Int
    finalBuyQty:Int
    finalInitialSetQty:Int
    finalReplenishmentQty:Int
}











